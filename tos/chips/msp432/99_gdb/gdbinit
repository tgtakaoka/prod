# /dev/ttyACM0, mm5a, 2331
# /dev/ttyACM1, mm5 (exp5438_gps), 2431

# to launch msp432-gdb
# M-x gdb
# arm-none-eabi-gdb-py -i=mi -nx -ex "target remote localhost:2331" -x .gdbinit -x .gdb_mm   build/exp_msp432/main.exe
# arm-none-eabi-gdb-py -i=mi -nx -ex "target remote localhost:2431" -x .gdbinit -x .gdb_mm5a build/exp_msp432/main.exe

# to launch msp432-gdb
# M-x gdb
# arm-none-eabi-gdb-py -i=mi -iex "target remote localhost:2331" main.exe

# (setq make-command ". ~/.environment_bash; make dev6a")
# (setq gud-gdb-command-name "arm-none-eabi-gdb-py -i=mi -iex \\"target remote localhost:2331\\" main.exe")
#
# 2331 is Jlink
# 55000 is TI's gdb-agent-console, gag

set remoteaddresssize 32
set remotetimeout 999999

set mem inaccessible-by-default off

add-symbol-file symbols_hw 0
source ../../.gdb_msp432
source ../../.gdb_tasks.py
source ../../.gdb_timers.py

set disassemble-next-line on

x/i $pc
set pri ele 0

define npc
disassem/r $pc,+0d32
end
document npc
display next (n) instructions from $pc
end

define new
load
mon reset
end
document new
load new image, same executable
then reset
end

define pc
# arg0 increment to increase PC by
set $pc=$pc+$arg0
end
document pc
adjust current PC by the passed in argument.
ie. pc 2   yields new pc of pc+2
end

define tq
taskQueue
printf "\n"
#printf "taskq: head: %d  tail %d\n", SchedulerBasicP__m_head, SchedulerBasicP__m_tail
#output/d SchedulerBasicP__m_next
end
document tq
display task queue
end

define timers
#
# transitioning to hwTMilli python code.
#   and dispTimers
#
# see mm/tools/00_gdb/gdbinit
#

# first part is superseeded by hwTMilli.
set $_upper=TransformCounterC__0__m_upper << 0d11
set $_lower = $ta1->R >> 5
printf "\n       TA1->R: %04x  CCR[0]: %04x    (%04x)    t_milli: %08x\n", \
  $ta1->R, $ta1->CCR[0], ($ta1->CCR[0])>>5, $_upper | $_lower
printf "Alarm[0]:  t0: %04x      dt: %04x    Counter[0]: upper: %04x\n\n", \
  TransformAlarmC__0__m_t0, TransformAlarmC__0__m_dt, TransformCounterC__0__m_upper
printf "\n"
dispTimers
end

define gg
set gg_wait=0
c
end
document gg
go, set gg_wait to 0 and continue
end

#b RealMainP.nc:86
#b RealMainP.nc:92
#b SchedulerBasicP.nc:159
#b SchedulerBasicP.nc:163
#b VirtualizeTimerC.nc:92
#dis

b PanicP.nc:79
comm
printf "\n\n*** Panic: %d(d), w: %d(d), a: %04x %04x %04x %04x\n", \
        PanicP___p,  PanicP___w, \
        PanicP___a0, PanicP___a1, PanicP___a2, PanicP___a3
end

b main
